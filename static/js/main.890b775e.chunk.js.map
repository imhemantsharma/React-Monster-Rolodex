{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","onChange","type","App","state","searchField","fetch","then","response","json","users","setState","this","filterMonsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACpB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCHVC,EAAW,SAAAR,GAAK,OAC3B,qBAAKC,UAAY,YAAjB,SACCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACrB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,UCJhBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,SAAf,OACvB,uBAAOZ,UAAU,SAASa,KAAO,SAASF,YAAcA,EAAaC,SAAWA,MCiCnEE,E,kDA7Bb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXP,SAAU,GACVQ,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEd,SAAWa,S,oBAG5C,WAAU,IAAD,SAC0BE,KAAKR,MAA9BP,EADD,EACCA,SAAUQ,EADX,EACWA,YACZQ,EAAiBhB,EAASiB,QAAO,SAAAtB,GAAO,OAC5CA,EAAQE,KAAKqB,cAAcC,SAASX,EAAYU,kBAClD,OACE,sBAAK1B,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,SAAY,SAAAgB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WAC7F,cAAC,EAAD,CAAUtB,SAAYgB,W,GAzBVO,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.890b775e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n  <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=160x160`} />\n    <h1>{props.monster.name}</h1>\n    <h2>{props.monster.email}</h2>\n  </div>\n);\n","import React from 'react';\nimport './card-list.styles.css'\nimport { Card } from '../card/card.component';\n\nexport const CardList = props => (\n  <div className = \"card-list\"> \n  {props.monsters.map(monster => (\n        <Card key = {monster.id} monster = {monster} />\n        ))}</div>\n);","import React from \"react\";\nimport './search-box.styles.css'\n\nexport const SearchBox = ({placeholder, onChange}) => (\n  <input className=\"search\" type = 'search' placeholder= {placeholder} onChange= {onChange}/>\n);\n","import React from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters : users }));\n  }\n\n  render() {\n    const { monsters, searchField} = this.state;\n    const filterMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox placeholder='Search monster' onChange= { e => this.setState({searchField:e.target.value})}/>\n      <CardList monsters = {filterMonsters} /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}